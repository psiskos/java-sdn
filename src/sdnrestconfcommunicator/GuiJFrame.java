/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sdnrestconfcommunicator;

import org.codehaus.jettison.json.JSONObject;
import static sdnrestconfcommunicator.SdnRestconfCommunicator.topoRestconfURL;
import javax.swing.DefaultListModel;
import javax.swing.JList;


/**
 *
 * @author pas
 */

public class GuiJFrame extends javax.swing.JFrame 
{
    protected String username,password,controllerIp;
    protected DefaultListModel listModel;
    /**
     * Creates new form GuiJFrame
     */
    public GuiJFrame() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controllerIpTxtFld = new javax.swing.JTextField();
        usernameTxtFld = new javax.swing.JTextField();
        controllerIpLbl = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        passwordFld = new javax.swing.JPasswordField();
        jScrollPane = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        getNodesMenuItm = new javax.swing.JMenuItem();
        getLinksMenuItm = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controllerIpTxtFld.setText("127.0.0.1");

        usernameTxtFld.setText("admin");

        controllerIpLbl.setText("Controller IP");

        usernameLbl.setText("Username");

        passwordLbl.setText("Password");

        passwordFld.setText("admin");

        jList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jListComponentHidden(evt);
            }
        });
        jScrollPane.setViewportView(jList);

        jMenu1.setText("Topology");

        getNodesMenuItm.setText("Get Nodes");
        getNodesMenuItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getNodesMenuItmActionPerformed(evt);
            }
        });
        jMenu1.add(getNodesMenuItm);

        getLinksMenuItm.setText("Get Links");
        getLinksMenuItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getLinksMenuItmActionPerformed(evt);
            }
        });
        jMenu1.add(getLinksMenuItm);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(controllerIpLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(controllerIpTxtFld, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(usernameTxtFld)
                            .addComponent(passwordFld))))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(controllerIpLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controllerIpTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getNodesMenuItmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getNodesMenuItmActionPerformed
        // TODO add your handling code here:
         //get Json Object reply of the controller and url given
        username = usernameTxtFld.getText();
        password = new String(passwordFld.getPassword());
        controllerIp = controllerIpTxtFld.getText();
         
        HttpGetJson mJSGet = new HttpGetJson();
        JSONObject jsonTopology = mJSGet.getRestconfInJson(username, password, controllerIp,topoRestconfURL);
        
        //parsing json reply object to get required fields
        ParseJsonReply mParseReply = new ParseJsonReply(jsonTopology);
        String []  nodes = mParseReply.getNodes();
        
        listModel =  new DefaultListModel();
        listModel.removeAllElements();
        for (int i = 0; i < nodes.length; i++) 
        {
            System.out.println(nodes[i]);
            listModel.addElement(nodes[i]);
        }
        jList.setModel( listModel );
    }//GEN-LAST:event_getNodesMenuItmActionPerformed

    private void getLinksMenuItmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getLinksMenuItmActionPerformed
        // TODO add your handling code here:
        username = usernameTxtFld.getText();
        password = new String(passwordFld.getPassword());
        controllerIp = controllerIpTxtFld.getText();
         
        HttpGetJson mJSGet = new HttpGetJson();
        JSONObject jsonTopology = mJSGet.getRestconfInJson(username, password, controllerIp,topoRestconfURL);
        
        //parsing json reply object to get required fields
        ParseJsonReply mParseReply = new ParseJsonReply(jsonTopology);
        String []  links = mParseReply.getLinks();
        
        listModel =  new DefaultListModel();
        listModel.removeAllElements();
        for (int i = 0; i < links.length; i++) 
        {
            System.out.println(links[i]);
            listModel.addElement(links[i]);
        }
        jList.setModel( listModel );
    }//GEN-LAST:event_getLinksMenuItmActionPerformed

    private void jListComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jListComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jListComponentHidden


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel controllerIpLbl;
    private javax.swing.JTextField controllerIpTxtFld;
    private javax.swing.JMenuItem getLinksMenuItm;
    private javax.swing.JMenuItem getNodesMenuItm;
    private javax.swing.JList<String> jList;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPasswordField passwordFld;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JTextField usernameTxtFld;
    // End of variables declaration//GEN-END:variables
}
